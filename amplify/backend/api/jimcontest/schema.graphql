type Contests @model @aws_iam
  @key(name: "getByCurrentFlag", fields:["current_flag"], queryField: "getByCurrentFlag") {
  id: ID!
  events: [Events] @connection(keyName: "byContest", fields: ["id"])
  contest_number: String!
  contest_type: String!
  current_flag: Int!
  start_date: String!
  end_date: String!
}

type Events @model 
  @key(fields: ["event_type", "contest_id"])
  @key(name: "byContest", fields: ["contest_id", "event_type", "scramble_id", "entry_count"]) {
  id: ID!
  contest_id: ID!
  contest: Contests @connection(fields: ["contest_id"])
  event_type: String!
  scramble_id: ID!
  scramble: Scrambles @connection(fields: ["scramble_id"])
  entry_count: Int!
}

type PreResults @model
  @auth(rules: [{ allow: owner }]) 
  @key(fields: ["event_type", "user_id"])
  @key(name: "getByUser" fields: ["user_id"]) {
  id: ID!
  user_id: ID!
  event_type: String!
  no1: ResultSchema!
  no2: ResultSchema
  no3: ResultSchema
  no4: ResultSchema
  no5: ResultSchema
}

type Users @model 
  @key(name: "getByUsername", fields: ["username"], queryField: "getByUsername") {
  id: ID!
  username: String!
  pre_results: [PreResults] @connection(keyName: "getByUser", fields: ["id"])
  results: [Results] @connection(keyName: "getByUser", fields: ["id"])
}

type Scrambles @model {
  id: ID!
  evnet_id: ID!
  scramble: String!
}

type Results @model 
  @key(fields: ["contest_type", "contest_id", "best", "average", "user_id"]) 
  @key(name: "getByUser", fields: ["user_id"], queryField: "getByUser") {
  id: ID!
  contest_id: ID!
  contest: Contests @connection(fields: ["contest_id"])
  contest_type: String!
  no1: ResultSchema!
  no2: ResultSchema!
  no3: ResultSchema!
  no4: ResultSchema!
  no5: ResultSchema!
  best: String!
  average: String!
  user_id: ID!
  user: Users @connection(fields: ["user_id"])
}

type ResultSchema {
  result: String!
  penalty: String!
}